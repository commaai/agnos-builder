name: build

on:
  push:
    branches: [ master ]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' && github.run_id || github.head_ref || github.ref }}-${{ github.workflow }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  build-docker-images:
    name: build docker images
    runs-on: namespace-profile-arm64-8x16-2004-caching
    timeout-minutes: 35
    steps:
    - uses: actions/checkout@v4
      with:
        lfs: true
        submodules: true

    - name: Download Ubuntu Base if needed
      run: |
        UBUNTU_BASE_URL="https://cdimage.ubuntu.com/ubuntu-base/releases/24.04/release/"
        UBUNTU_FILE="ubuntu-base-24.04.3-base-arm64.tar.gz"
        UBUNTU_FILE_CHECKSUM="7b2dced6dd56ad5e4a813fa25c8de307b655fdabc6ea9213175a92c48dabb048"
        if [ ! -f $UBUNTU_FILE ]; then
          echo "Downloading Ubuntu Base: $UBUNTU_FILE"
          curl -C - -o $UBUNTU_FILE $UBUNTU_BASE_URL/$UBUNTU_FILE --silent --remote-time --fail
        fi
        if [ "$(shasum -a 256 "$UBUNTU_FILE" | awk '{print $1}')" != "$UBUNTU_FILE_CHECKSUM" ]; then
          echo "Checksum mismatch"
          exit 1
        fi

    - name: Build agnos-meta-builder image
      run: |
        export DOCKER_BUILDKIT=1
        docker build -f Dockerfile.builder -t agnos-meta-builder . \
          --build-arg UNAME=$(id -nu) \
          --build-arg UID=$(id -u) \
          --build-arg GID=$(id -g)

    - name: Build agnos-builder image
      run: |
        export DOCKER_BUILDKIT=1
        UBUNTU_FILE="ubuntu-base-24.04.3-base-arm64.tar.gz"
        docker buildx build --load -f Dockerfile.agnos -t agnos-builder . \
          --build-arg UBUNTU_BASE_IMAGE=$UBUNTU_FILE \
          --platform=linux/arm64

    - name: Save Docker images
      run: |
        mkdir -p docker-images
        docker save agnos-meta-builder | gzip > docker-images/agnos-meta-builder.tar.gz
        docker save agnos-builder | gzip > docker-images/agnos-builder.tar.gz

    - name: Upload Docker images
      uses: actions/upload-artifact@v4
      with:
        name: docker-images
        path: docker-images/
        retention-days: 1

  build-kernel:
    name: build kernel
    needs: [build-docker-images]
    runs-on: namespace-profile-arm64-8x16-2004-caching
    timeout-minutes: 20
    outputs:
      kernel-ref: ${{ steps.kernel-submodule.outputs.ref }}
    steps:
    - uses: actions/checkout@v4
      with:
        lfs: true
        submodules: true

    - name: Download Docker images
      uses: actions/download-artifact@v4
      with:
        name: docker-images
        path: docker-images

    - name: Load Docker images
      run: |
        docker load < docker-images/agnos-meta-builder.tar.gz

    - name: Get kernel submodule ref
      id: kernel-submodule
      run: echo "ref=$(git ls-tree HEAD | awk '$4 == "agnos-kernel-sdm845"' | awk '{print $3}')" | tee -a $GITHUB_OUTPUT

    - name: ccache
      uses: hendrikmuhs/ccache-action@c92f40bee50034e84c763e33b317c77adaa81c92
      with:
        key: kernel-${{ steps.kernel-submodule.outputs.ref }}
        restore-keys: kernel-

    - name: Build kernel
      env:
        SKIP_DOCKER_BUILD: "true"
      run: ./build_kernel.sh

    - name: Upload kernel artifact
      uses: actions/upload-artifact@v4
      with:
        name: kernel-boot-img
        path: output/boot.img
        retention-days: 1

  build-system:
    name: build system
    needs: [build-docker-images]
    runs-on: namespace-profile-arm64-8x16-2004-caching
    timeout-minutes: 20
    steps:
    - uses: actions/checkout@v4
      with:
        lfs: true
        submodules: true

    - name: Download Docker images
      uses: actions/download-artifact@v4
      with:
        name: docker-images
        path: docker-images

    - name: Load Docker images
      run: |
        docker load < docker-images/agnos-meta-builder.tar.gz
        docker load < docker-images/agnos-builder.tar.gz

    - name: Update VERSION
      if: github.event_name == 'pull_request'
      run: |
        echo -n $(cat VERSION)-$(echo ${{ github.event.pull_request.head.sha }} | cut -c1-7) > VERSION

    - name: Build system
      env:
        GIT_HASH: ${{ github.event.pull_request.head.sha }}
        SKIP_DOCKER_BUILD: "true"
      run: ./build_system.sh

    - name: Upload system artifact
      uses: actions/upload-artifact@v4
      with:
        name: system-img
        path: output/system.img
        retention-days: 1

    - name: Upload build directory for statistics
      uses: actions/upload-artifact@v4
      with:
        name: build-dir
        path: build/system.img
        retention-days: 1

    - name: Upload VERSION file
      uses: actions/upload-artifact@v4
      with:
        name: version-file
        path: VERSION
        retention-days: 1

  package:
    name: package and upload
    needs: [build-kernel, build-system]
    runs-on: namespace-profile-arm64-8x16-2004-caching
    timeout-minutes: 20
    steps:
    - uses: actions/checkout@v4
      with:
        lfs: true
        submodules: true

    - name: Get commit message
      run: |
        {
          echo 'LAST_COMMIT_MESSAGE<<EOF'
          if [ "${{ github.event_name }}" == "push" ]; then
            echo "${{ github.event.head_commit.message }}"
          elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            COMMIT_URL=$(echo "${{ github.event.repository.commits_url }}" | sed "s|{/sha}|/${{ github.sha }}|")
            echo "$(curl -s "$COMMIT_URL" | jq -r '.commit.message')"
          elif [ "${{ github.event_name }}" == "pull_request" ]; then
            PR_COMMIT_URL=$(echo "${{ github.event.repository.commits_url }}" | sed "s|{/sha}|/${{ github.event.pull_request.head.sha }}|")
            echo "$(curl -s "$PR_COMMIT_URL" | jq -r '.commit.message')"
          fi
          echo EOF
        } | tee -a $GITHUB_ENV

    - name: Create output and build directories
      run: mkdir -p output build build/agnos-rootfs

    - name: Download kernel artifact
      uses: actions/download-artifact@v4
      with:
        name: kernel-boot-img
        path: output

    - name: Download system artifact
      uses: actions/download-artifact@v4
      with:
        name: system-img
        path: output

    - name: Download build directory
      uses: actions/download-artifact@v4
      with:
        name: build-dir
        path: build

    - name: Download VERSION file
      uses: actions/download-artifact@v4
      with:
        name: version-file
        path: .

    - name: Statistics
      id: stats
      run: |
        {
          echo 'stats_summary<<EOF'
          scripts/analyze-agnos-rootfs.sh
          echo EOF
        } | tee -a $GITHUB_OUTPUT

    - name: Package and OTA push
      if: "contains(env.LAST_COMMIT_MESSAGE, '[upload]')"
      env:
        AGNOS_UPDATE_URL: https://gitlab.com/commaai/ci-artifacts/-/raw/agnos-builder/pr-${{ github.event.number }}
      run: |
        scripts/package_ota.py

    - name: Save PR number, VERSION and stats
      if: "contains(env.LAST_COMMIT_MESSAGE, '[upload]')"
      run: |
        echo ${{ github.event.number }} > output/ota/PR
        cp VERSION output/ota
        echo "${{ steps.stats.outputs.stats_summary }}" > output/ota/agnos_stats.txt

    - name: Upload artifacts
      if: "contains(env.LAST_COMMIT_MESSAGE, '[upload]')"
      uses: actions/upload-artifact@v4
      with:
        name: agnos-artifacts
        path: output/ota
        compression-level: 0
