# check=error=true

# ################## #
# ### Package  ##### #
# ### Compilation ## #
# ################## #
FROM ubuntu:24.04 AS agnos-compiler

# Common packages - combine into single layer and use --no-install-suggests
RUN apt-get update && apt-get install -yq --no-install-recommends --no-install-suggests \
    build-essential \
    ca-certificates \
    ccache \
    clang \
    curl \
    checkinstall \
    git \
    pkg-config \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Enable ccache
ENV PATH="/usr/lib/ccache:$PATH"

# Parallel compilation stages - can build simultaneously
# capnproto
FROM agnos-compiler AS agnos-compiler-capnp
COPY ./userspace/compile-capnp.sh /tmp/agnos/
RUN --mount=type=cache,target=/root/.ccache,id=capnp,sharing=shared \
    /tmp/agnos/compile-capnp.sh

# ffmpeg
FROM agnos-compiler AS agnos-compiler-ffmpeg
COPY ./userspace/compile-ffmpeg.sh /tmp/agnos/
RUN --mount=type=cache,target=/root/.ccache,id=ffmpeg,sharing=shared \
    /tmp/agnos/compile-ffmpeg.sh

# libqmi
FROM agnos-compiler AS agnos-compiler-libqmi
COPY ./userspace/compile-libqmi.sh /tmp/agnos/
RUN --mount=type=cache,target=/root/.ccache,id=libqmi,sharing=shared \
    /tmp/agnos/compile-libqmi.sh

# ModemManager - depends on libqmi
FROM agnos-compiler-libqmi AS agnos-compiler-modemmanager
COPY ./userspace/compile-modemmanager.sh /tmp/agnos/
RUN --mount=type=cache,target=/root/.ccache,id=modemmanager,sharing=shared \
    /tmp/agnos/compile-modemmanager.sh

# lpac - depends on libqmi
FROM agnos-compiler-libqmi AS agnos-compiler-lpac
COPY ./userspace/compile-lpac.sh /tmp/agnos/
RUN --mount=type=cache,target=/root/.ccache,id=lpac,sharing=shared \
    /tmp/agnos/compile-lpac.sh

# qtwayland5
FROM agnos-compiler AS agnos-compiler-qtwayland5
COPY ./userspace/qtwayland/*.deb /tmp/agnos/
COPY ./userspace/compile-qtwayland5.sh /tmp/agnos/
COPY ./userspace/qtwayland/patch* /tmp/agnos/
RUN --mount=type=cache,target=/root/.ccache,id=qtwayland5,sharing=shared \
    /tmp/agnos/compile-qtwayland5.sh

# ################## #
# ###### Base ###### #
# ################## #
FROM scratch AS agnos-base

# Add Ubuntu Base image files
ARG UBUNTU_BASE_IMAGE
ADD ${UBUNTU_BASE_IMAGE} /

# Build folder and error handling
RUN mkdir -p /tmp/agnos && set -xe

ARG USERNAME=comma

# Base system setup - combine related operations
RUN echo "resolvconf resolvconf/linkify-resolvconf boolean false" | debconf-set-selections
COPY ./userspace/base_setup.sh /tmp/agnos
RUN /tmp/agnos/base_setup.sh

# Install dependencies in single layer to reduce layers
COPY ./userspace/openpilot_dependencies.sh ./userspace/openpilot_python_dependencies.sh /tmp/agnos/
RUN /tmp/agnos/openpilot_dependencies.sh && /tmp/agnos/openpilot_python_dependencies.sh

# Install Qt and dependencies - combine into single operation
COPY ./userspace/qtwayland/*.deb /tmp/agnos/
RUN apt-get update && apt-get -o Dpkg::Options::="--force-overwrite" install -yq \
    /tmp/agnos/qt-5.12.8.deb \
    /tmp/agnos/libwayland-1.9.0-1.deb \
    /tmp/agnos/libicu66_66.1-2ubuntu2.1_arm64.deb \
    /tmp/agnos/libssl1.1_1.1.1f-1ubuntu2.22_arm64.deb \
    /tmp/agnos/libffi6_3.2.1-8_arm64.deb \
    && rm -rf /var/lib/apt/lists/* /tmp/agnos/*.deb

# ################### #
# ###### AGNOS ###### #
# ################### #
FROM agnos-base

# Copy all compiled packages at once
COPY --from=agnos-compiler-capnp /tmp/capnproto.deb /tmp/
COPY --from=agnos-compiler-ffmpeg /tmp/ffmpeg.deb /tmp/
COPY --from=agnos-compiler-libqmi /tmp/libqmi.deb /tmp/
COPY --from=agnos-compiler-modemmanager /tmp/modemmanager.deb /tmp/
COPY --from=agnos-compiler-lpac /tmp/lpac.deb /tmp/
COPY --from=agnos-compiler-qtwayland5 /tmp/qtwayland5.deb /tmp/

# Hardware setup and package installation in single layer
RUN mkdir -p /tmp/agnos/debs
COPY ./userspace/debs /tmp/agnos/debs
COPY ./userspace/hardware_setup.sh /tmp/agnos
RUN /tmp/agnos/hardware_setup.sh && \
    mv /data/persist /system/ && rm -rf /data/* && \
    # Install all packages in single apt operation
    apt-get update && \
    apt-get install -yq --no-install-recommends --no-install-suggests \
    python3 \
    python3-dev \
    gir1.2-qmi-1.0 \
    libglib2.0-dev \
    libqmi-glib5 \
    libc6 \
    libglib2.0-0t64 \
    libgudev-1.0-0 \
    libmm-glib0 \
    libpolkit-gobject-1-0 \
    libsystemd0 \
    polkitd \
    mobile-broadband-provider-info && \
    # Install compiled packages
    cd /tmp && \
    apt-get -o Dpkg::Options::="--force-overwrite" install -yq \
    ./capnproto.deb \
    ./ffmpeg.deb \
    ./libqmi.deb \
    ./modemmanager.deb \
    ./lpac.deb \
    --allow-downgrades ./qtwayland5.deb && \
    # Cleanup in same layer
    rm -rf /var/lib/apt/lists/* /tmp/*.deb && \
    apt-get clean

ARG XDG_DATA_HOME="/usr/local"

# Install Python packages
COPY ./userspace/uv /tmp/agnos/uv
RUN source $XDG_DATA_HOME/venv/bin/activate && \
    cd /tmp/agnos/uv && \
    export PYOPENCL_CL_PRETEND_VERSION="2.0" && \
    MAKEFLAGS="-j$(nproc)" UV_NO_CACHE=1 UV_PROJECT_ENVIRONMENT=$XDG_DATA_HOME/venv uv sync --frozen --inexact --compile-bytecode && \
    # Cleanup in same layer
    rm -rf /tmp/agnos/uv

# Install extras
COPY ./userspace/install_extras.sh /tmp/agnos/
RUN /tmp/agnos/install_extras.sh

# Copy system files - group by destination to reduce layers
# Library files
COPY ./userspace/files/libeglSubDriverWayland.so.patched /lib/aarch64-linux-gnu/libeglSubDriverWayland.so
COPY ./userspace/usr/comma/ /usr/$USERNAME/
COPY ./userspace/usr/share/fonts/* /usr/share/fonts/
COPY ./userspace/libs/* /usr/lib/aarch64-linux-gnu/
COPY ./userspace/libs32/* /usr/lib/arm-linux-gnueabihf/
COPY ./userspace/files/weston /usr/bin/weston
COPY ./userspace/files/gl-renderer.so /usr/lib/arm-linux-gnueabihf/weston
COPY ./userspace/files/CAMERA_ICP.elf /usr/lib/firmware

# System configuration files - combine into fewer layers
COPY ./userspace/files/*.path ./userspace/files/*.mount ./userspace/files/*.service ./userspace/files/*.timer /lib/systemd/system/
COPY ./userspace/files/ModemManager.service /lib/systemd/system/
COPY ./userspace/files/serial-getty@ttyMSM0_override.conf /lib/systemd/system/serial-getty@ttyMSM0.service.d/serial-getty@ttyMSM0_override.conf
COPY ./userspace/files/ssh_override.conf /lib/systemd/system/ssh.service.d/override.conf
COPY ./userspace/firmware/* /lib/firmware/

# /etc configuration files
COPY ./userspace/files/fstab \
     ./userspace/files/profile \
     ./userspace/files/logrotate.conf \
     /etc/
COPY ./userspace/files/comma-polkit.rules /etc/polkit-1/rules.d/
COPY ./userspace/files/*.rules /etc/udev/rules.d/
COPY ./userspace/files/ssh*_config /etc/ssh/
COPY ./userspace/files/rsyslog /etc/logrotate.d/
COPY ./userspace/files/10-globally-managed-devices.conf /etc/NetworkManager/conf.d/
COPY ./userspace/files/NetworkManager.conf /etc/NetworkManager/
COPY ./userspace/files/*.nmconnection /usr/lib/NetworkManager/system-connections/
COPY ./userspace/files/logind.conf /etc/systemd/
COPY ./userspace/files/avahi-override.conf /etc/systemd/system/avahi-daemon.service.d/override.conf
COPY ./userspace/files/polkit-override.conf /etc/systemd/system/polkit.service.d/override.conf
COPY ./userspace/etc/iptables/rules.v4 /etc/iptables/rules.v4
COPY ./userspace/files/serviceproviders.xml /usr/share/mobile-broadband-provider-info/serviceproviders.xml

# Home directory setup
COPY ./userspace/home/ /home/$USERNAME/
COPY ./userspace/home/.config/ /root/.config
RUN chown -R $USERNAME: /home/$USERNAME/.config

# System configuration - combine related operations
RUN chmod 644 /etc/logrotate.conf && \
    touch -r /lib/systemd/systemd /etc/fstab && \
    chmod 600 /usr/lib/NetworkManager/system-connections/*.nmconnection && \
    echo "precedence ::ffff:0:0/96 100" >> /etc/gai.conf && \
    systemctl enable ModemManager && \
    sed -i 's/hosts:          files dns myhostname/hosts:          files myhostname dns/g' /etc/nsswitch.conf && \
    ldconfig

# Setup systemd services
COPY ./userspace/services.sh /tmp/agnos
RUN /tmp/agnos/services.sh

# MOTD setup
RUN rm -r /etc/update-motd.d/*
COPY --chown=root:root ./userspace/motd/* /etc/update-motd.d/

# Cleanup operations - combine into single layer
RUN cd /usr/lib/gcc/arm-none-eabi/* && \
    rm -rf arm/ && \
    find thumb/ -maxdepth 1 -type d ! \( -name 'thumb' -o -name 'v7e-m+fp' -o -name 'v7e-m+dp' \) -exec rm -rf {} + && \
    rm -f cc1plus g++-mapper-server && \
    find /usr/bin -maxdepth 1 -type f -name 'arm-none-eabi-*' ! \( -name 'arm-none-eabi-gcc' -o -name 'arm-none-eabi-objcopy' -o -name 'arm-none-eabi-objdump' \) -delete && \
    rm -rf /usr/lib/aarch64-linux-gnu/qt5/plugins/bearer

# Setup RO rootfs
RUN mkdir -p /rwtmp /tmptmp
COPY ./userspace/readonly_setup.sh /tmptmp/readonly_setup.sh
RUN /tmptmp/readonly_setup.sh && rm -rf /tmptmp

# Final setup - copy version and apt config
COPY ./userspace/files/apt.conf /etc/apt/apt.conf
COPY VERSION /VERSION

# Final cleanup - combine all cleanup operations
RUN rm -rf /usr/share/icons/* \
    /var/lib/apt/lists/* \
    /home/$USERNAME/.cache \
    /root/.cache \
    /tmp/agnos \
    && apt-get clean